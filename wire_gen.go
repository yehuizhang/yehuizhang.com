// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"yehuizhang.com/go-webapp-gin/pkg/database"
	"yehuizhang.com/go-webapp-gin/pkg/flag_parser"
	"yehuizhang.com/go-webapp-gin/pkg/logger"
	"yehuizhang.com/go-webapp-gin/src/config"
	"yehuizhang.com/go-webapp-gin/src/controllers/admin"
	"yehuizhang.com/go-webapp-gin/src/controllers/user"
	"yehuizhang.com/go-webapp-gin/src/dao/user/account"
	"yehuizhang.com/go-webapp-gin/src/dao/user/info"
	"yehuizhang.com/go-webapp-gin/src/server"
)

// Injectors from wire.go:

func BuildInjector() (Injector, func(), error) {
	controller := &admin.Controller{}
	sugaredLogger := logger.InitLogger()
	flagParser := flag_parser.InitFlagParser(sugaredLogger)
	viper, err := config.InitConfig(flagParser, sugaredLogger)
	if err != nil {
		return Injector{}, nil, err
	}
	databaseDatabase, err := database.InitDatabase(viper, sugaredLogger)
	if err != nil {
		return Injector{}, nil, err
	}
	iUserAccountQuery := account.InitUserAccountQuery(databaseDatabase, sugaredLogger)
	iUserInfoQuery := info.InitUserInfoQuery(databaseDatabase, sugaredLogger)
	userController := &user.Controller{
		Log:          sugaredLogger,
		Db:           databaseDatabase,
		AccountQuery: iUserAccountQuery,
		InfoQuery:    iUserInfoQuery,
	}
	router := &server.Router{
		AdminController: controller,
		UserController:  userController,
		Database:        databaseDatabase,
	}
	serverServer := &server.Server{
		Router:   router,
		Config:   viper,
		Database: databaseDatabase,
		Log:      sugaredLogger,
	}
	injector := Injector{
		Server: serverServer,
		Log:    sugaredLogger,
	}
	return injector, func() {
	}, nil
}
